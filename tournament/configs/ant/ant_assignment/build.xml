<project name="Project" default="default">

    <target name="check_prog">
	<echo message="${program}"/>
        <fail message="Please provide a program to test with -Dprogam=''. The arguments can be one of {original, mutant-1, mutant-2, mutant-3, mutant-4, mutant-5}">
            <condition>
                <or>
                    <not>
                        <isset property="program"/>
                    </not>
                    <not>
                        <or>
                            <equals arg1="${program}" arg2="original"/>
                            <equals arg1="${program}" arg2="mutant-1"/>
                            <equals arg1="${program}" arg2="mutant-2"/>
                            <equals arg1="${program}" arg2="mutant-3"/>
                            <equals arg1="${program}" arg2="mutant-4"/>
                            <equals arg1="${program}" arg2="mutant-5"/>
                        </or>
                    </not>
                </or>
            </condition>
        </fail>
    </target>

    <target name="compile_prog" depends="check_prog">
        <mkdir dir="classes/programs/${program}" />
        <depend srcdir="programs/${program}" destdir="classes/programs/${program}" cache=".depcache/programs/${program}" closure="yes"/>
        <javac srcdir="programs/${program}" destdir="classes/programs/${program}"  classpath="lib/junit-4.11.jar;lib/hamcrest-core-1.3.jar" includeantruntime="false"/>
    </target>

    <target name="compile_orig">
        <mkdir dir="classes/programs/original" />
        <depend srcdir="test" destdir="classes/programs/original" cache=".depcache/programs/original" closure="yes"/>
        <javac srcdir="programs/original" destdir="classes/programs/original" classpath="lib/junit-4.11.jar;lib/hamcrest-core-1.3.jar" includeantruntime="false"/>
    </target>

    <target name="compile_test" depends="compile_orig">
        <mkdir dir="classes/test"/>
        <depend srcdir="test" destdir="classes/test" cache=".depcache/test" closure="yes"/>
        <javac srcdir="test" destdir="classes/test" classpath="lib/junit-4.11.jar;lib/hamcrest-core-1.3.jar;classes/programs/original" includeantruntime="false"/>
    </target>

    <target name="clean">
        <delete dir="classes"/>
        <delete dir=".depcache"/>
        <delete><fileset dir="results" includes="**/*"/></delete>
    </target>

    <target name="partitioning" depends="compile_prog, compile_test">
        <parallel threadCount="1" timeout="5000">
            <sequential>
                <junit printsummary="yes" fork="yes" haltonfailure="yes">
                    <classpath>
                        <pathelement path="classes/programs/${program}"/>
                        <pathelement path="classes/test"/>
                        <pathelement path="lib/junit-4.11.jar"/>
                        <pathelement path="lib/hamcrest-core-1.3.jar"/>
                    </classpath>
                    <formatter type="plain"/>
                    <test name="swen90006.machine.PartitioningTests" todir="results" outfile="partitioning_results.${program}"/>
                </junit>
            </sequential>
        </parallel>
    </target>

    <target name="boundary" depends="compile_prog, compile_test">
        <parallel threadCount="1" timeout="5000">
            <sequential>
                <junit printsummary="yes" fork="yes" haltonfailure="yes">
                    <classpath>
                        <pathelement path="classes/programs/${program}"/>
                        <pathelement path="classes/test"/>
                        <pathelement path="lib/junit-4.11.jar"/>
                        <pathelement path="lib/hamcrest-core-1.3.jar"/>
                    </classpath>
                    <formatter type="plain"/>
                    <test name="swen90006.machine.BoundaryTests" todir="results" outfile="boundary_results.${program}"/>
                </junit>
            </sequential>
        </parallel>
    </target>

</project>
